{"version":3,"sources":["components/Card/Card.component.jsx","components/CardList/CardList.component.jsx","components/SearchBox/SearchBox.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","console","log","monsters","map","SearchBox","type","placeholder","onChange","handleChange","App","state","searchField","bind","fetch","then","res","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACjB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,YCJdC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAEV,sBAAKC,UAAU,YAAf,UACG,IACAD,EAAMW,SAASC,KAAI,SAACT,GAAD,OAClB,cAAC,EAAD,CAAwBA,QAASA,GAAtBA,EAAQC,OACjB,QCRCS,G,MAAY,SAACb,GACxB,OACE,qBAAKC,UAAU,SAAf,SACE,uBACEa,KAAK,SACLC,YAAaf,EAAMe,YACnBC,SAAUhB,EAAMiB,mBCmCTC,E,kDAtCb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXR,SAAU,GACVS,YAAa,IAGf,EAAKH,aAAa,EAAKA,aAAaI,KAAlB,gBAPD,E,qDAUnB,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,S,0BAG/C,SAAaE,GACXC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,oBAGxC,WAAU,IAAD,EAC2BF,KAAKV,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZY,EAAmBrB,EAASsB,QAAO,SAAC9B,GAAD,OACvCA,EAAQG,KAAK4B,cAAcC,SAASf,EAAYgB,wBAElD,OACE,sBAAKnC,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CACEc,YAAY,iBACZE,aAAcY,KAAKZ,eAErB,cAAC,EAAD,CAAUN,SAAUqB,W,GAjCVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.03e942de.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n      <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt='monster' />\r\n        <h2>{props.monster.name}</h2>\r\n        <h4>{props.monster.email}</h4>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './CardList.styles.css'\r\nimport {Card} from './../Card/Card.component';\r\n\r\nexport const CardList = (props) => {\r\n    console.log(props);\r\n    return (\r\n      <div className='card-list'>\r\n        {\" \"}\r\n        {props.monsters.map((monster) => (\r\n          <Card key={monster.id}  monster={monster} />\r\n        ))}{\" \"}\r\n      </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./SearchBox.styles.css\";\r\n\r\nexport const SearchBox = (props) => {\r\n  return (\r\n    <div className='search'>\r\n      <input\r\n        type='search'\r\n        placeholder={props.placeholder}\r\n        onChange={props.handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/CardList/CardList.component\";\nimport { SearchBox } from \"./components/SearchBox/SearchBox.components\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n\n    this.handleChange=this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange(e){\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className='App'>\n        <h1>Monsters Deck</h1>\n        <SearchBox\n          placeholder='Search Monster'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}